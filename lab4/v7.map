Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
                              kellen_music.o (__tablejump2__)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
                              v7.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                              v7.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

notes               0x1               kellen_music.o
song                0x1               kellen_music.o
max_beat            0x2               kellen_music.o
beat                0x2               kellen_music.o
lcd_str             0x10              LCDDriver.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
LOAD v7.o
LOAD functions.o
LOAD LCDDriver.o
LOAD kellen_music.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega128.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x2c5e
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c      0x3aa kellen_music.o
                0x0000000000000436                . = ALIGN (0x2)
                0x0000000000000436                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000436        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000436                __trampolines_end = .
 *(.progmem*)
                0x0000000000000436                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000436                __ctors_start = .
 *(.ctors)
                0x0000000000000436                __ctors_end = .
                0x0000000000000436                __dtors_start = .
 *(.dtors)
                0x0000000000000436                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000436        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000436                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000436        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000442       0x1a /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
                0x0000000000000442                __do_copy_data
 .init4         0x000000000000045c       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                0x000000000000045c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000046c        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x0000000000000474        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000474                __vector_22
                0x0000000000000474                __vector_28
                0x0000000000000474                __vector_1
                0x0000000000000474                __vector_32
                0x0000000000000474                __vector_34
                0x0000000000000474                __vector_24
                0x0000000000000474                __bad_interrupt
                0x0000000000000474                __vector_6
                0x0000000000000474                __vector_31
                0x0000000000000474                __vector_3
                0x0000000000000474                __vector_23
                0x0000000000000474                __vector_30
                0x0000000000000474                __vector_25
                0x0000000000000474                __vector_11
                0x0000000000000474                __vector_13
                0x0000000000000474                __vector_17
                0x0000000000000474                __vector_19
                0x0000000000000474                __vector_7
                0x0000000000000474                __vector_27
                0x0000000000000474                __vector_5
                0x0000000000000474                __vector_33
                0x0000000000000474                __vector_4
                0x0000000000000474                __vector_9
                0x0000000000000474                __vector_2
                0x0000000000000474                __vector_21
                0x0000000000000474                __vector_15
                0x0000000000000474                __vector_29
                0x0000000000000474                __vector_8
                0x0000000000000474                __vector_26
                0x0000000000000474                __vector_14
                0x0000000000000474                __vector_18
                0x0000000000000474                __vector_20
 .text          0x0000000000000478      0x684 v7.o
                0x0000000000000478                init_tcnt2
                0x0000000000000486                switch_buttons
                0x00000000000004b4                __vector_10
                0x0000000000000584                clock_conversion
                0x0000000000000600                snooze_pushed
                0x0000000000000672                clock_update
                0x0000000000000706                LED_seg
                0x00000000000007a2                __vector_16
                0x00000000000008a0                read_encoders
 .text          0x0000000000000afc      0x116 functions.o
                0x0000000000000afc                init_tcnt0
                0x0000000000000b10                debounce_switch
                0x0000000000000b50                spi_init
                0x0000000000000b5a                spi_read_send
                0x0000000000000b6c                check_buttons
                0x0000000000000bba                int_to_digit
                0x0000000000000bce                init_adc
                0x0000000000000bd8                read_adc
                0x0000000000000be4                init_tcnt3
 .text          0x0000000000000c12      0x754 LCDDriver.o
                0x0000000000000c12                strobe_lcd
                0x0000000000000c24                LCD_Clr
                0x0000000000000c60                LCD_MovCursorLn1
                0x0000000000000c90                LCD_MovCursorLn2
                0x0000000000000cc0                LCD_CursorBlinkOn
                0x0000000000000cf0                LCD_CursorBlinkOff
                0x0000000000000d20                LCD_MovCursor
                0x0000000000000d62                LCD_FillSpaces
                0x0000000000000d9e                LCD_PutDec8
                0x0000000000000e6a                LCD_PutDec16
                0x0000000000000fea                LCD_PutChar
                0x000000000000101a                LCD_PutStr
                0x0000000000001078                LCD_SPIInit
                0x0000000000001096                LCD_Init
 .text          0x0000000000001366     0x1836 kellen_music.o
                0x0000000000001366                play_rest
                0x0000000000001382                play_note
                0x00000000000019c2                song0
                0x0000000000001b9c                song1
                0x0000000000001d7c                song2
                0x0000000000002826                song3
                0x00000000000028fe                song4
                0x0000000000002a60                play_song
                0x0000000000002a9e                music_off
                0x0000000000002ab2                music_on
                0x0000000000002ace                music_init
                0x0000000000002b16                __vector_12
 .text          0x0000000000002b9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text          0x0000000000002b9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text          0x0000000000002b9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000002b9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                0x0000000000002b9c                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000002b9c       0xac v7.o
                0x0000000000002b9c                main
 .text.libgcc.mul
                0x0000000000002c48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000002c48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000002c48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000002c48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000002c48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000002c48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000002c48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000002c48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x0000000000002c48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc   0x0000000000002c48       0x12 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
                0x0000000000002c48                __tablejump2__
 .text.libgcc.prologue
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                0x0000000000002c5a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000002c5a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                0x0000000000002c5a                exit
                0x0000000000002c5a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000002c5a        0x4 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000002c5e                _etext = .

.data           0x0000000000800100       0x66 load address 0x0000000000002c5e
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x8 v7.o
                0x0000000000800102                ALARM
                0x0000000000800105                CLOCK
 .data          0x0000000000800108        0x0 functions.o
 .data          0x0000000000800108        0x0 LCDDriver.o
 .data          0x0000000000800108        0x0 kellen_music.o
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800108       0x10 v7.o
 .rodata        0x0000000000800118        0xa functions.o
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800122       0x44 v7.o
 *(.gnu.linkonce.d*)
                0x0000000000800166                . = ALIGN (0x2)
                0x0000000000800166                _edata = .
                0x0000000000800166                PROVIDE (__data_end, .)

.bss            0x0000000000800166       0x39
                0x0000000000800166                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800166        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .bss           0x0000000000800166       0x12 v7.o
                0x0000000000800166                am_pm
                0x0000000000800167                mode
                0x0000000000800168                LED
 .bss           0x0000000000800178       0x10 functions.o
 .bss           0x0000000000800188        0x0 LCDDriver.o
 .bss           0x0000000000800188        0x1 kellen_music.o
                0x0000000000800188                rest_mute
 .bss           0x0000000000800189        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800189        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .bss           0x0000000000800189        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800189        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800189       0x10 LCDDriver.o
                0x0000000000800189                lcd_str
 COMMON         0x0000000000800199        0x6 kellen_music.o
                0x0000000000800199                notes
                0x000000000080019a                song
                0x000000000080019b                max_beat
                0x000000000080019d                beat
                0x000000000080019f                PROVIDE (__bss_end, .)
                0x0000000000002c5e                __data_load_start = LOADADDR (.data)
                0x0000000000002cc4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080019f        0x0
                0x000000000080019f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080019f                PROVIDE (__noinit_end, .)
                0x000000000080019f                _end = .
                0x000000000080019f                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x5700
 *(.stab)
 .stab          0x0000000000000000     0x13ec v7.o
 .stab          0x00000000000013ec      0x6d8 functions.o
                                        0x8a0 (size before relaxing)
 .stab          0x0000000000001ac4     0x15d8 LCDDriver.o
                                       0x17c4 (size before relaxing)
 .stab          0x000000000000309c     0x2664 kellen_music.o
                                       0x285c (size before relaxing)

.stabstr        0x0000000000000000     0x1423
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1423 v7.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 v7.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 functions.o
 .comment       0x0000000000000011       0x12 LCDDriver.o
 .comment       0x0000000000000011       0x12 kellen_music.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(v7.elf elf32-avr)
LOAD linker stubs
